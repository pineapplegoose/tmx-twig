{# templates/components/toast.html.twig #}
<div x-data="toast()" x-init="init()" x-show="show" x-transition class="fixed bottom-4 right-4 z-50 max-w-sm" style="display: none;">
	<div :class="getClasses()" class="flex items-center gap-3 p-4 border rounded-lg shadow-lg">
		<div x-show="icon" x-html="icon"></div>
		<div class="flex-1">
			<p class="text-sm font-medium" x-text="message"></p>
		</div>
		<button @click="close()" class="opacity-70 hover:opacity-100">
			<svg class="w-4 h-4" fill="none" stroke="currentColor" viewbox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
			</svg>
		</button>
	</div>
</div>

<script>
	function toast() {
return {
show: false,
message: '',
type: 'info',
icon: '',
timeout: null,

init() {
console.log('Toast component initialized');
// Listen for toast events
window.addEventListener('show-toast', (e) => {
console.log('Toast event received:', e.detail);
this.handleToast(e);
});
},

handleToast(event) {
const data = event.detail || {};

// Clear existing timeout if any
if (this.timeout) {
clearTimeout(this.timeout);
}

// Set new toast data
this.message = data.message || 'No message';
this.type = data.type || 'info';
this.icon = this.getIcon();
this.show = true;

// Auto-hide after 5 seconds
this.timeout = setTimeout(() => {
this.close();
}, 5000);
},

close() {
this.show = false;
if (this.timeout) {
clearTimeout(this.timeout);
this.timeout = null;
}
},

getIcon() {
const icons = {
error: `<svg class="w-5 h-5 text-red-600" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/></svg>`,
success: `<svg class="w-5 h-5 text-green-600" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/></svg>`,
warning: `<svg class="w-5 h-5 text-yellow-600" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/></svg>`,
info: `<svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/></svg>`
};
return icons[this.type] || icons.info;
},

getClasses() {
const classes = {
error: 'bg-red-50 border-red-200 text-red-800',
success: 'bg-green-50 border-green-200 text-green-800',
warning: 'bg-yellow-50 border-yellow-200 text-yellow-800',
info: 'bg-blue-50 border-blue-200 text-blue-800'
};
return classes[this.type] || classes.info;
}
};
}
</script>
